# vim: ft=conf ts=4 expandtab

set $Alt Mod1
set $Win Mod4
set $bin $HOME/.config/sway/bin
set $terminal foot
set $lock_time 900
set $monitor_off_time 1200


# General Configuration
# ----------------------
#
# font for window titles
font pango:Cascadia Code 10

# disable the focus following the mouse and vice versa
focus_follows_mouse no
mouse_warping none

# Use Mouse+$Alt to drag floating windows to their wanted position
floating_modifier $Win

# going to the same workspace where we're already at should go back to where we were before
workspace_auto_back_and_forth yes

# hide borders when there's only one window on the workspace
# --i3 hides title bars on stacked/tabbed containers with one child
hide_edge_borders --i3 smart

# inhibit locking when something is fullscreen
for_window [class="^.*"] inhibit_idle fullscreen
for_window [app_id="^.*"] inhibit_idle fullscreen


# Autostart
# ----------
#
# merge the values from .Xresources
exec_always xrdb -merge $HOME/.Xresources

# fix GTK applications to be really slow to start, due to issues with xdg-desktop-portal
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment && dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway

# import gsettings (some GTK applications ignore some settings otherwise)
exec_always "$bin/import-gsettings.sh"

# start kanshi (wayland's autorandr) for automatically setting up the displays
exec kanshi

# screen locking & display power management
exec swayidle -w timeout $lock_time "$bin/lock.sh -s" timeout $monitor_off_time 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' before-sleep "$bin/lock.sh -s"

# start waybar
exec waybar

# start the notification daemon -- without one, there may be issues (e.g. Rambox hanging)
exec mako

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec nm-applet --indicator

# start gammastep (the wayland alternative for redshift)
exec "$bin/gammastep.sh"

# start an installed polkit agent
exec "$bin/polkit-agent.sh"


# Hotkeys for Programs
# ---------------------
# note: 'exec --locked' allows the hotkeys even in locked state (swaylock)
#
# Use pactl to adjust volume in PulseAudio.
bindsym --locked XF86AudioRaiseVolume  exec pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym --locked XF86AudioLowerVolume  exec pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym --locked XF86AudioMute         exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym --locked XF86AudioMicMute      exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# playerctl for controlling music players
bindsym --locked XF86AudioPlay         exec playerctl play-pause
bindsym --locked XF86AudioNext         exec playerctl next
bindsym --locked XF86AudioPrev         exec playerctl previous

# brightnessctl for adjusting backlight
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 1%-
bindsym --locked XF86MonBrightnessUp   exec brightnessctl set +1%

# start a terminal
bindsym $Win+Return                    exec $terminal
bindsym Ctrl+$Alt+Return               exec $terminal
bindsym Ctrl+$Alt+t                    exec $terminal

# start the file explorer
bindsym $Win+e                         exec xdg-open $HOME

# start rofi (a program launcher)
bindsym $Win+d                         exec rofi -show drun -display-drun "Application"
bindsym $Win+s                         exec rofi -show ssh -display-ssh "SSH"
bindsym $Win+Shift+d                   exec rofi -show run -display-run "Program"
bindsym $Alt+Tab                       focus next
bindsym $Alt+Shift+Tab                 focus prev

# notification daemon control
bindsym Ctrl+Space                     exec makoctl dismiss
bindsym Ctrl+Shift+Space               exec makoctl dismiss -a
bindsym Ctrl+Shift+Grave               exec makoctl restore
bindsym Ctrl+Shift+Period              exec makoctl menu rofi -dmenu -p "Choose Action"

# screenshots
bindsym --release Print                exec $bin/screenshot.sh -o
bindsym --release $Alt+Print           exec $bin/screenshot.sh
bindsym --release Shift+Print          exec $bin/screenshot.sh -i
bindsym --release Ctrl+Print           exec $bin/screenshot.sh -co
bindsym --release Ctrl+$Alt+Print      exec $bin/screenshot.sh -c
bindsym --release Ctrl+Shift+Print     exec $bin/screenshot.sh -ci

# virtual private networks
# note: this auto-selects the action; forcing actions is available in the mode_vpn
bindsym $Alt+Shift+v exec $bin/vpn.sh


# Navigation and sway Management
# -------------------------------
# kill focused window
bindsym $Alt+Shift+q kill
bindsym Ctrl+Shift+q kill

# reload the configuration file
bindsym $Alt+Shift+c reload

# change focus
bindsym $Alt+h focus left
bindsym $Alt+j focus down
bindsym $Alt+k focus up
bindsym $Alt+l focus right

# same with Win key
bindsym $Win+h focus left
bindsym $Win+j focus down
bindsym $Win+k focus up
bindsym $Win+l focus right

# alternatively, you can use the cursor keys:
bindsym $Alt+Left focus left
bindsym $Alt+Down focus down
bindsym $Alt+Up focus up
bindsym $Alt+Right focus right

# same with Win hotkey
bindsym $Win+Left focus left
bindsym $Win+Down focus down
bindsym $Win+Up focus up
bindsym $Win+Right focus right

# move focused window
bindsym $Alt+Shift+h move left
bindsym $Alt+Shift+j move down
bindsym $Alt+Shift+k move up
bindsym $Alt+Shift+l move right

# same with Win key
bindsym $Win+Shift+h move left
bindsym $Win+Shift+j move down
bindsym $Win+Shift+k move up
bindsym $Win+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $Alt+Shift+Left move left
bindsym $Alt+Shift+Down move down
bindsym $Alt+Shift+Up move up
bindsym $Alt+Shift+Right move right

# same with Win key
bindsym $Win+Shift+Left move left
bindsym $Win+Shift+Down move down
bindsym $Win+Shift+Up move up
bindsym $Win+Shift+Right move right

# keys for altering the split orientation
# note: the split direction is shown by a highlighted border
bindsym $Alt+Ctrl+i split horizontal
bindsym $Alt+Ctrl+o split v
bindsym $Alt+Ctrl+p split toggle

# enter fullscreen mode for the focused container
# note: alt+f collides with zsh emacs navigation
bindsym $Alt+Shift+f fullscreen toggle
bindsym $Alt+Ctrl+Shift+f fullscreen toggle global

# change container layout (stacked, tabbed, toggle split)
workspace_layout tabbed
bindsym $Alt+Shift+s layout stacking
bindsym $Alt+Shift+w layout tabbed
bindsym $Alt+Shift+e layout toggle split

# toggle tiling / floating
bindsym $Alt+Shift+Space floating toggle
bindsym $Win+Shift+Space floating toggle

# change focus between tiling / floating windows
bindsym $Alt+Space focus mode_toggle
bindsym $Win+Space focus mode_toggle

# focus the parent container
bindsym $Alt+a focus parent

# focus the child container
# note: alt+d collides with zsh emacs deletion
bindsym $Alt+Shift+a focus child

# focus next/previous workspace on the focused output
bindsym $Alt+n workspace next_on_output
bindsym $Alt+p workspace prev_on_output
bindsym $Alt+Shift+n exec $bin/create-new-workspace.sh

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $Alt+1 workspace number $ws1
bindsym $Alt+2 workspace number $ws2
bindsym $Alt+3 workspace number $ws3
bindsym $Alt+4 workspace number $ws4
bindsym $Alt+5 workspace number $ws5
bindsym $Alt+6 workspace number $ws6
bindsym $Alt+7 workspace number $ws7
bindsym $Alt+8 workspace number $ws8
bindsym $Alt+9 workspace number $ws9
bindsym $Alt+0 workspace number $ws10

# same with Win as modifier, but without auto-back-and-forth
bindsym $Win+1 workspace --no-auto-back-and-forth number $ws1
bindsym $Win+2 workspace --no-auto-back-and-forth number $ws2
bindsym $Win+3 workspace --no-auto-back-and-forth number $ws3
bindsym $Win+4 workspace --no-auto-back-and-forth number $ws4
bindsym $Win+5 workspace --no-auto-back-and-forth number $ws5
bindsym $Win+6 workspace --no-auto-back-and-forth number $ws6
bindsym $Win+7 workspace --no-auto-back-and-forth number $ws7
bindsym $Win+8 workspace --no-auto-back-and-forth number $ws8
bindsym $Win+9 workspace --no-auto-back-and-forth number $ws9
bindsym $Win+0 workspace --no-auto-back-and-forth number $ws10

# move focused container to workspace
bindsym $Alt+Shift+1 move container to workspace number $ws1; workspace number $ws1
bindsym $Alt+Shift+2 move container to workspace number $ws2; workspace number $ws2
bindsym $Alt+Shift+3 move container to workspace number $ws3; workspace number $ws3
bindsym $Alt+Shift+4 move container to workspace number $ws4; workspace number $ws4
bindsym $Alt+Shift+5 move container to workspace number $ws5; workspace number $ws5
bindsym $Alt+Shift+6 move container to workspace number $ws6; workspace number $ws6
bindsym $Alt+Shift+7 move container to workspace number $ws7; workspace number $ws7
bindsym $Alt+Shift+8 move container to workspace number $ws8; workspace number $ws8
bindsym $Alt+Shift+9 move container to workspace number $ws9; workspace number $ws9
bindsym $Alt+Shift+0 move container to workspace number $ws10; workspace number $ws10


# Resize Window
# --------------
# (you can also use the mouse for that)
mode "Resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $Alt+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $Alt+r mode "default"
}

bindsym $Alt+r mode "Resize"


# Power Management Menu
# ----------------------
set $locker $HOME/.config/sway/bin/lock.sh -s
set $mode_system (L) Lock, (O) Logout, (S) Suspend, (H) Hibernate, (Shift+R) Reboot, (Shift+P) Power Off

mode "$mode_system" {
    bindsym l       exec $locker, mode "default"
    bindsym o       exec swaymsg exit, mode "default"
    bindsym s       exec $locker && sleep 1 && systemctl suspend, mode "default"
    bindsym h       exec $locker && sleep 1 && systemctl hibernate, mode "default"
    bindsym Shift+r exec systemctl reboot, mode "default"
    bindsym Shift+p exec systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $Alt+Escape mode "$mode_system"
bindsym $Win+Escape mode "$mode_system"


# Monitor Management Menu
# ------------------------
set $mode_monitor Monitor: (H, L, [1-9]): Move, (M): Mirror, (O): Disable, (Shift+O): Enable All (S): Save Layout, (R): Restore Layout
set $mode_mirror_monitor Mirror: (H, L, [1-9]): Target Monitor

mode "$mode_monitor" {
    bindsym h       exec $bin/monitorctl.py -l, mode "default"
    bindsym Left    exec $bin/monitorctl.py -l, mode "default"
    bindsym l       exec $bin/monitorctl.py -r, mode "default"
    bindsym Right   exec $bin/monitorctl.py -r, mode "default"
    bindsym o       exec $bin/monitorctl.py --off, mode "default"
    bindsym Shift+o exec $bin/monitorctl.py --on, mode "default"
    bindsym s       exec $bin/save-monitor-profile.py -w, mode "default"
    bindsym r       exec kanshictl reload, mode "default"

    bindsym 1 exec $bin/monitorctl.py 0, mode "default"
    bindsym 2 exec $bin/monitorctl.py 1, mode "default"
    bindsym 3 exec $bin/monitorctl.py 2, mode "default"
    bindsym 4 exec $bin/monitorctl.py 3, mode "default"
    bindsym 5 exec $bin/monitorctl.py 4, mode "default"
    bindsym 6 exec $bin/monitorctl.py 5, mode "default"
    bindsym 7 exec $bin/monitorctl.py 6, mode "default"
    bindsym 8 exec $bin/monitorctl.py 7, mode "default"
    bindsym 9 exec $bin/monitorctl.py 8, mode "default"

    # back to normal: Enter or Escape
    bindsym m mode "$mode_mirror_monitor"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "$mode_mirror_monitor" {
    # FIXME monitor mirroring isn't supported yet in sway
    # bindsym h       exec $bin/monitorctl.py -l, mode "default"
    # bindsym Left    exec $bin/monitorctl.py -l, mode "default"
    # bindsym l       exec $bin/monitorctl.py -r, mode "default"
    # bindsym Right   exec $bin/monitorctl.py -r, mode "default"
    # bindsym o       exec $bin/monitorctl.py --off, mode "default"
    # bindsym Shift+o exec $bin/monitorctl.py --on, mode "default"

    # bindsym 1 exec $bin/monitorctl.py 0, mode "default"
    # bindsym 2 exec $bin/monitorctl.py 1, mode "default"
    # bindsym 3 exec $bin/monitorctl.py 2, mode "default"
    # bindsym 4 exec $bin/monitorctl.py 3, mode "default"
    # bindsym 5 exec $bin/monitorctl.py 4, mode "default"
    # bindsym 6 exec $bin/monitorctl.py 5, mode "default"
    # bindsym 7 exec $bin/monitorctl.py 6, mode "default"
    # bindsym 8 exec $bin/monitorctl.py 7, mode "default"
    # bindsym 9 exec $bin/monitorctl.py 8, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $Alt+m mode "$mode_monitor"
bindsym $Win+m mode "$mode_monitor"


# Mouse Menu
# ----------
set $mode_mouse Mouse: (H) Left, (J) Down, (K) Up, (L) Right, (Enter) Left Click, (Shift+Enter) Right Click, (U) Scroll Up, (D) Scroll Down

mode "$mode_mouse" {
    # Enter for left click, Shift+Enter for right click
    bindsym Return                 exec swaymsg seat - cursor press button1
    bindsym Shift+Return           exec swaymsg seat - cursor press button3
    bindsym --release Return       exec swaymsg seat - cursor release button1
    bindsym --release Shift+Return exec swaymsg seat - cursor release button3

    # U and D for scroll wheel up and down
    bindsym u            exec swaymsg seat - cursor press button4
    bindsym d            exec swaymsg seat - cursor press button5

    # vim-style hotkeys for moving the cursor, with Alt and Shift for increasing movement speed
    bindsym h            exec swaymsg seat - cursor move -- -100 0
    bindsym j            exec swaymsg seat - cursor move -- 0 100
    bindsym k            exec swaymsg seat - cursor move -- 0 -100
    bindsym l            exec swaymsg seat - cursor move -- 100 0
    bindsym $Alt+h       exec swaymsg seat - cursor move -- -50 0
    bindsym $Alt+j       exec swaymsg seat - cursor move -- 0 50
    bindsym $Alt+k       exec swaymsg seat - cursor move -- 0 -50
    bindsym $Alt+l       exec swaymsg seat - cursor move -- 50 0
    bindsym Shift+h      exec swaymsg seat - cursor move -- -10 0
    bindsym Shift+j      exec swaymsg seat - cursor move -- 0 10
    bindsym Shift+k      exec swaymsg seat - cursor move -- 0 -10
    bindsym Shift+l      exec swaymsg seat - cursor move -- 10 0
    bindsym Shift+$Alt+h exec swaymsg seat - cursor move -- -1 0
    bindsym Shift+$Alt+j exec swaymsg seat - cursor move -- 0 1
    bindsym Shift+$Alt+k exec swaymsg seat - cursor move -- 0 -1
    bindsym Shift+$Alt+l exec swaymsg seat - cursor move -- 1 0

    # warp the mouse to the given workspace
    bindsym 1 exec "$bin/warp.py" -a $ws1
    bindsym 2 exec "$bin/warp.py" -a $ws2
    bindsym 3 exec "$bin/warp.py" -a $ws3
    bindsym 4 exec "$bin/warp.py" -a $ws4
    bindsym 5 exec "$bin/warp.py" -a $ws5
    bindsym 6 exec "$bin/warp.py" -a $ws6
    bindsym 7 exec "$bin/warp.py" -a $ws7
    bindsym 8 exec "$bin/warp.py" -a $ws8
    bindsym 9 exec "$bin/warp.py" -a $ws9
    bindsym 0 exec "$bin/warp.py" -a $ws10

    # with the shift modifier, warp the mouse but do not activate the workspace
    bindsym Shift+1 exec "$bin/warp.py" $ws1
    bindsym Shift+2 exec "$bin/warp.py" $ws2
    bindsym Shift+3 exec "$bin/warp.py" $ws3
    bindsym Shift+4 exec "$bin/warp.py" $ws4
    bindsym Shift+5 exec "$bin/warp.py" $ws5
    bindsym Shift+6 exec "$bin/warp.py" $ws6
    bindsym Shift+7 exec "$bin/warp.py" $ws7
    bindsym Shift+8 exec "$bin/warp.py" $ws8
    bindsym Shift+9 exec "$bin/warp.py" $ws9
    bindsym Shift+0 exec "$bin/warp.py" $ws10

    # back to normal: Enter or Escape
    bindsym Escape mode "default"
}

bindsym $Alt+Shift+M mode "$mode_mouse"
bindsym $Win+Shift+M mode "$mode_mouse"


# VPN Menu
# --------
set $mode_vpn VPN: (C) Connect, (D) Disconnect, (A) Auto

mode "$mode_vpn" {
    # Enter for left click, Shift+Enter for right click
    bindsym c exec "$bin/vpn.sh -c", mode "default"
    bindsym d exec "$bin/vpn.sh -d", mode "default"
    bindsym a exec "$bin/vpn.sh", mode "default"

    # back to normal: Enter or Escape
    bindsym Escape mode "default"
}

bindsym Ctrl+Shift+$Alt+V mode "$mode_vpn"



# Color Theme (Nord)
# -------------------
# (colors set from ~/.Xresources)
#
# polar night
set $nord0 "#2E3440"
set $nord1 "#3B4252"
set $nord2 "#434C5E"
set $nord3 "#4C566A"

# snow storm
set $nord4 "#D8DEE9"
set $nord5 "#E5E9F0"
set $nord6 "#ECEFF4"

# frost
# 7: frozen water, 8: pure ice, 9: water, 10: ocean
set $nord7  "#8FBCBB"
set $nord8  "#88C0D0"
set $nord9  "#81A1C1"
set $nord10 "#5E81AC"

# aurora
# 11: red (errors), 12: orange (warning), 13: yellow (info)
# 14: green (success), 15: purple (other)
set $nord11 "#BF616A"
set $nord12 "#D08770"
set $nord13 "#EBCB8B"
set $nord14 "#A3BE8C"
set $nord15 "#B48EAD"

# using the colors
# class                  border    backg.    text      indic.     child_border
client.focused           $nord1    $nord3    $nord6    $nord9     $nord3
client.focused_inactive  $nord1    $nord0    $nord4    $nord10    $nord0
client.unfocused         $nord1    $nord0    $nord4    $nord10    $nord0
client.urgent            $nord12   $nord12   $nord5    $nord13    $nord12
client.placeholder       $nord1    $nord0    $nord4    $nord10    $nord0
client.background                  $nord0

input type:pointer {
    accel_profile flat
    pointer_accel -0.1
}

input type:keyboard {
    xkb_layout eu
    xkb_options caps:escape
}

output * {
    background ~/.background.jpg fill
}
